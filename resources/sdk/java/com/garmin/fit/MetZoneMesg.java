////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2014 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 13.10Release
// Tag = $Name$
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;


public class MetZoneMesg extends Mesg {

   protected static final	Mesg metZoneMesg;
   static {            
      int field_index = 0;
      int subfield_index = 0;         
      // met_zone   
      metZoneMesg = new Mesg("met_zone", MesgNum.MET_ZONE);
      metZoneMesg.addField(new Field("message_index", 254, 132, 1, 0, "", false));
      field_index++;
      metZoneMesg.addField(new Field("high_bpm", 1, 2, 1, 0, "", false));
      field_index++;
      metZoneMesg.addField(new Field("calories", 2, 132, 10, 0, "kcal / min", false));
      field_index++;
      metZoneMesg.addField(new Field("fat_calories", 3, 2, 10, 0, "kcal / min", false));
      subfield_index = 0;
      metZoneMesg.fields.get(field_index).subFields.add(new SubField("low_alert_elevation", 132, 5, 500, "m"));
      metZoneMesg.fields.get(field_index).subFields.get(subfield_index).addMap(0, 0);
      subfield_index++;
      metZoneMesg.fields.get(field_index).subFields.add(new SubField("high_alert_elevation", 132, 5, 500, "m"));
      metZoneMesg.fields.get(field_index).subFields.get(subfield_index).addMap(0, 0);
      subfield_index++;
      field_index++;
   }

   public MetZoneMesg() {
      super(Factory.createMesg(MesgNum.MET_ZONE));
   }

   public MetZoneMesg(final Mesg mesg) {
      super(mesg);
   }


   /**
    * Get message_index field
    *
    * @return message_index
    */
   public Integer getMessageIndex() {
      return getFieldIntegerValue(254, 0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Set message_index field
    *
    * @param messageIndex
    */
   public void setMessageIndex(Integer messageIndex) {
      setFieldValue(254, 0, messageIndex, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Get high_bpm field
    *
    * @return high_bpm
    */
   public Short getHighBpm() {
      return getFieldShortValue(1, 0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Set high_bpm field
    *
    * @param highBpm
    */
   public void setHighBpm(Short highBpm) {
      setFieldValue(1, 0, highBpm, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Get calories field
    * Units: kcal / min
    *
    * @return calories
    */
   public Float getCalories() {
      return getFieldFloatValue(2, 0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Set calories field
    * Units: kcal / min
    *
    * @param calories
    */
   public void setCalories(Float calories) {
      setFieldValue(2, 0, calories, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Get fat_calories field
    * Units: kcal / min
    *
    * @return fat_calories
    */
   public Float getFatCalories() {
      return getFieldFloatValue(3, 0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Set fat_calories field
    * Units: kcal / min
    *
    * @param fatCalories
    */
   public void setFatCalories(Float fatCalories) {
      setFieldValue(3, 0, fatCalories, Fit.SUBFIELD_INDEX_MAIN_FIELD);
   }

   /**
    * Get low_alert_elevation field
    * Units: m
    *
    * @return low_alert_elevation
    */
   public Float getLowAlertElevation() {
      return getFieldFloatValue(3, 0, Profile.SubFields.MET_ZONE_MESG_FAT_CALORIES_FIELD_LOW_ALERT_ELEVATION);
   }

   /**
    * Set low_alert_elevation field
    * Units: m
    *
    * @param lowAlertElevation
    */
   public void setLowAlertElevation(Float lowAlertElevation) {
      setFieldValue(3, 0, lowAlertElevation, Profile.SubFields.MET_ZONE_MESG_FAT_CALORIES_FIELD_LOW_ALERT_ELEVATION);
   }

   /**
    * Get high_alert_elevation field
    * Units: m
    *
    * @return high_alert_elevation
    */
   public Float getHighAlertElevation() {
      return getFieldFloatValue(3, 0, Profile.SubFields.MET_ZONE_MESG_FAT_CALORIES_FIELD_HIGH_ALERT_ELEVATION);
   }

   /**
    * Set high_alert_elevation field
    * Units: m
    *
    * @param highAlertElevation
    */
   public void setHighAlertElevation(Float highAlertElevation) {
      setFieldValue(3, 0, highAlertElevation, Profile.SubFields.MET_ZONE_MESG_FAT_CALORIES_FIELD_HIGH_ALERT_ELEVATION);
   }

}
